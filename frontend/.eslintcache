[{"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/index.js":"1","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/App.js":"2","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reportWebVitals.js":"3","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/Header.js":"4","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/BestiaryScreen.js":"5","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/CreatureScreen.js":"6","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/store.js":"7","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reducers/creatureReducers.js":"8","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/constants/creatureConstants.js":"9","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/actions/creatureActions.js":"10","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/Message.js":"11","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/Loader.js":"12","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reducers/tabsReducers.js":"13","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/constants/tabsConstants.js":"14","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/TabsSide.js":"15","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/actions/tabsActions.js":"16","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reducers/spellReducers.js":"17","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reducers/spellTabsReducers.js":"18","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/SpellTabsSide.js":"19","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/SpellScreen.js":"20","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/BestiarySpellScreen.js":"21","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/constants/spellConstants.js":"22","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/constants/spellTabsConstants.js":"23","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/actions/spellTabsActions.js":"24","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/actions/spellActions.js":"25","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/HomeScreen.js":"26","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reducers/userReducers.js":"27","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/LoginScreen.js":"28","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/constants/userConstants.js":"29","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/actions/userActions.js":"30","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/FormContainer.js":"31","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/CreatureEditScreen.js":"32"},{"size":587,"mtime":1608205003642,"results":"33","hashOfConfig":"34"},{"size":1854,"mtime":1608496930120,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1607682481802,"results":"36","hashOfConfig":"34"},{"size":2082,"mtime":1608307610253,"results":"37","hashOfConfig":"34"},{"size":2595,"mtime":1608496937640,"results":"38","hashOfConfig":"34"},{"size":8977,"mtime":1608573447053,"results":"39","hashOfConfig":"34"},{"size":1702,"mtime":1608346794318,"results":"40","hashOfConfig":"34"},{"size":2543,"mtime":1608542925246,"results":"41","hashOfConfig":"34"},{"size":1065,"mtime":1608346179170,"results":"42","hashOfConfig":"34"},{"size":3811,"mtime":1608346623149,"results":"43","hashOfConfig":"34"},{"size":238,"mtime":1608206809088,"results":"44","hashOfConfig":"34"},{"size":329,"mtime":1608207300424,"results":"45","hashOfConfig":"34"},{"size":671,"mtime":1608223907516,"results":"46","hashOfConfig":"34"},{"size":96,"mtime":1608209313569,"results":"47","hashOfConfig":"34"},{"size":969,"mtime":1608225046491,"results":"48","hashOfConfig":"34"},{"size":629,"mtime":1608224065846,"results":"49","hashOfConfig":"34"},{"size":1478,"mtime":1608327873955,"results":"50","hashOfConfig":"34"},{"size":760,"mtime":1608244619122,"results":"51","hashOfConfig":"34"},{"size":1001,"mtime":1608244508029,"results":"52","hashOfConfig":"34"},{"size":2864,"mtime":1608328016966,"results":"53","hashOfConfig":"34"},{"size":1587,"mtime":1608245187411,"results":"54","hashOfConfig":"34"},{"size":509,"mtime":1608327184326,"results":"55","hashOfConfig":"34"},{"size":120,"mtime":1608244330584,"results":"56","hashOfConfig":"34"},{"size":724,"mtime":1608244417044,"results":"57","hashOfConfig":"34"},{"size":1822,"mtime":1608327208638,"results":"58","hashOfConfig":"34"},{"size":1927,"mtime":1608536945885,"results":"59","hashOfConfig":"34"},{"size":511,"mtime":1608288298830,"results":"60","hashOfConfig":"34"},{"size":2185,"mtime":1608289335370,"results":"61","hashOfConfig":"34"},{"size":200,"mtime":1608288300210,"results":"62","hashOfConfig":"34"},{"size":954,"mtime":1608307231525,"results":"63","hashOfConfig":"34"},{"size":397,"mtime":1608289197349,"results":"64","hashOfConfig":"34"},{"size":17766,"mtime":1608573143278,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"uf0qi1",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"68"},"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/index.js",[],["133","134"],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/App.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reportWebVitals.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/Header.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/BestiaryScreen.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/CreatureScreen.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/store.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reducers/creatureReducers.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/constants/creatureConstants.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/actions/creatureActions.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/Message.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/Loader.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reducers/tabsReducers.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/constants/tabsConstants.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/TabsSide.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/actions/tabsActions.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reducers/spellReducers.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reducers/spellTabsReducers.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/SpellTabsSide.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/SpellScreen.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/BestiarySpellScreen.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/constants/spellConstants.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/constants/spellTabsConstants.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/actions/spellTabsActions.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/actions/spellActions.js",[],["135","136"],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/HomeScreen.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reducers/userReducers.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/LoginScreen.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/constants/userConstants.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/actions/userActions.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/FormContainer.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/CreatureEditScreen.js",["137","138"],"import React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Form, Button } from \"react-bootstrap\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport FormContainer from \"../components/FormContainer\"\nimport { listCreatureDetails, updateCreature } from \"../actions/creatureActions\"\nimport { CREATURE_UPDATE_RESET } from \"../constants/creatureConstants\"\n\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\"\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\"\n\nconst CreatureEditScreen = ({ match, history }) => {\n  const [text, setText] = useState(\"\")\n\n  const creatureId = match.params.id\n\n  const [name, setName] = useState(\"\")\n  const [armorClass, setArmorClass] = useState(\"\")\n  const [aligment, setAligment] = useState(\"\")\n  const [type, setType] = useState(\"\")\n  const [size, setSize] = useState(\"\")\n  const [hits, setHits] = useState(\"\")\n  const [danger, setDanger] = useState(\"\")\n  const [speed, setSpeed] = useState(\"\")\n  const [speedFlying, setSpeedFlying] = useState(\"\")\n  const [speedSwim, setSpeedSwim] = useState(\"\")\n  const [speedClimb, setSpeedClimb] = useState(\"\")\n  const [resistance, setResistance] = useState(\"\")\n  const [immunityToDamage, setImmunityToDamage] = useState(\"\")\n  const [vulnerabilityToDamage, setVulnerabilityToDamage] = useState(\"\")\n  const [immunityToStatus, setImmunityToStatus] = useState(\"\")\n  const [str, setStr] = useState(\"\")\n  const [dex, setDex] = useState(\"\")\n  const [con, setCon] = useState(\"\")\n  const [int, setInt] = useState(\"\")\n  const [wis, setWis] = useState(\"\")\n  const [cha, setCha] = useState(\"\")\n  const [sav, setSav] = useState(\"\")\n  const [abilities, setAbilities] = useState(\"\")\n  const [skills, setSkills] = useState(\"\")\n  const [sense, setSense] = useState(\"\")\n  const [languages, setLanguages] = useState(\"\")\n  const [actions, setActions] = useState(\"\")\n  const [legendaryActions, setLegendaryActions] = useState(\"\")\n  const [lair, setLair] = useState(\"\")\n  const [lairActions, setLairActions] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const dispatch = useDispatch()\n\n  const creatureDetails = useSelector((state) => state.creatureDetails)\n  const { loading, error, creature } = creatureDetails\n\n  const creatureUpdate = useSelector((state) => state.creatureUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = creatureUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: CREATURE_UPDATE_RESET })\n      history.push(\"/creatures\")\n    } else {\n      if (!creature.name || creature._id !== creatureId) {\n        dispatch(listCreatureDetails(creatureId))\n      } else {\n        setName(creature.name)\n        setArmorClass(creature.armorClass)\n        setAligment(creature.aligment)\n        setType(creature.type)\n        setSize(creature.size)\n        setHits(creature.hits)\n        setDanger(creature.danger)\n        setSpeed(creature.speed)\n        setSpeedFlying(creature.speedFlying)\n        setSpeedSwim(creature.speedSwim)\n        setSpeedClimb(creature.speedClimb)\n        setResistance(creature.resistance)\n        setImmunityToDamage(creature.immunityToDamage)\n        setVulnerabilityToDamage(creature.vulnerabilityToDamage)\n        setImmunityToStatus(creature.immunityToStatus)\n        setStr(creature.str)\n        setDex(creature.dex)\n        setCon(creature.con)\n        setInt(creature.int)\n        setWis(creature.wis)\n        setCha(creature.cha)\n        setSav(creature.sav)\n        setAbilities(creature.abilities)\n        setSkills(creature.skills)\n        setSense(creature.sense)\n        setLanguages(creature.languages)\n        setActions(creature.actions)\n        setLegendaryActions(creature.legendaryActions)\n        setLair(creature.lair)\n        setLairActions(creature.lairActions)\n        setDescription(creature.description)\n      }\n    }\n  }, [dispatch, history, creatureId, creature, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateCreature({\n        _id: creatureId,\n        name,\n        armorClass,\n        aligment,\n        type,\n        size,\n        hits,\n        danger,\n        speed,\n        speedFlying,\n        speedSwim,\n        speedClimb,\n        resistance,\n        immunityToDamage,\n        vulnerabilityToDamage,\n        immunityToStatus,\n        str,\n        dex,\n        con,\n        int,\n        wis,\n        cha,\n        sav,\n        abilities,\n        skills,\n        sense,\n        languages,\n        actions,\n        legendaryActions,\n        lair,\n        lairActions,\n        description,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/creatures' className='btn btn-light my-3'>\n        Назад\n      </Link>\n      <FormContainer>\n        <h1>Редактор существа</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Имя</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Введите имя'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='size'>\n              <Form.Label>Размер</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите размер'\n                value={size}\n                onChange={(e) => setSize(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='type'>\n              <Form.Label>Тип</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите тип существа'\n                value={type}\n                onChange={(e) => setType(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='aligment'>\n              <Form.Label>Воззрение</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите воззрение'\n                value={aligment}\n                onChange={(e) => setAligment(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='armorClass'>\n              <Form.Label>Броня</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите броню'\n                value={armorClass}\n                onChange={(e) => setArmorClass(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='hits'>\n              <Form.Label>Хиты</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите хиты'\n                value={hits}\n                onChange={(e) => setHits(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='speed'>\n              <Form.Label>Скорость</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите скорость'\n                value={speed}\n                onChange={(e) => setSpeed(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='speedFlying'>\n              <Form.Label>Скорость в полете</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите скорость в полете'\n                value={speedFlying}\n                onChange={(e) => setSpeedFlying(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='speedSwim'>\n              <Form.Label>Скорость в плавании</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите скорость в плавании'\n                value={speedSwim}\n                onChange={(e) => setSpeedSwim(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='speedClimb'>\n              <Form.Label>Скорость ползком</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите скорость ползком'\n                value={speedClimb}\n                onChange={(e) => setSpeedClimb(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='str'>\n              <Form.Label>Сила</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите силу'\n                value={str}\n                onChange={(e) => setStr(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='dex'>\n              <Form.Label>Ловкость</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите ловкость'\n                value={dex}\n                onChange={(e) => setDex(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='con'>\n              <Form.Label>Телосложение</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите телосложение'\n                value={con}\n                onChange={(e) => setCon(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='int'>\n              <Form.Label>Интеллект</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите интеллект'\n                value={int}\n                onChange={(e) => setInt(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='wis'>\n              <Form.Label>Мудрость</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите мудрость'\n                value={wis}\n                onChange={(e) => setWis(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='cha'>\n              <Form.Label>Харизма</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите харизму'\n                value={cha}\n                onChange={(e) => setCha(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='resistance'>\n              <Form.Label>Сопротивление к урону</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите сопротивляемость'\n                value={resistance}\n                onChange={(e) => setResistance(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='immunityToDamage'>\n              <Form.Label>Иммунитеты</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите иммунитеты'\n                value={immunityToDamage}\n                onChange={(e) => setImmunityToDamage(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='vulnerabilityToDamage'>\n              <Form.Label>Уязвимость к урону</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите уязвимость к урону'\n                value={vulnerabilityToDamage}\n                onChange={(e) => setVulnerabilityToDamage(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='immunityToStatus'>\n              <Form.Label>Иммунитеты к статусам</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите иммунитеты к статусам'\n                value={immunityToStatus}\n                onChange={(e) => setImmunityToStatus(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='cha'>\n              <Form.Label>Спасброски</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите спасброски'\n                value={sav}\n                onChange={(e) => setSav(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='skills'>\n              <Form.Label>Навыки</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите навыки'\n                value={skills}\n                onChange={(e) => setSkills(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='sense'>\n              <Form.Label>Чувства</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите чувства'\n                value={sense}\n                onChange={(e) => setSense(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='languages'>\n              <Form.Label>Языки</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите языки'\n                value={languages}\n                onChange={(e) => setLanguages(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='danger'>\n              <Form.Label>Опасность</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Введите опасность'\n                value={danger}\n                onChange={(e) => setDanger(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='abilities'>\n              <Form.Label>Способности</Form.Label>\n              <div className='editor'>\n                <CKEditor\n                  editor={ClassicEditor}\n                  data={abilities}\n                  onChange={(event, editor) => {\n                    const data = editor.getData()\n                    setAbilities(data)\n                  }}\n                ></CKEditor>\n              </div>\n            </Form.Group>\n\n            <Form.Group controlId='actions'>\n              <Form.Label>Действия</Form.Label>\n              <div className='editor'>\n                <CKEditor\n                  editor={ClassicEditor}\n                  data={actions}\n                  onChange={(event, editor) => {\n                    const data = editor.getData()\n                    setActions(data)\n                  }}\n                ></CKEditor>\n              </div>\n            </Form.Group>\n\n            <Form.Group controlId='legendaryActions'>\n              <Form.Label>Легендарные действия</Form.Label>\n              <div className='editor'>\n                <CKEditor\n                  editor={ClassicEditor}\n                  data={legendaryActions}\n                  onChange={(event, editor) => {\n                    const data = editor.getData()\n                    setLegendaryActions(data)\n                  }}\n                ></CKEditor>\n              </div>\n            </Form.Group>\n\n            <Form.Group controlId='lair'>\n              <Form.Label>Логово</Form.Label>\n              <div className='editor'>\n                <CKEditor\n                  editor={ClassicEditor}\n                  data={lair}\n                  onChange={(event, editor) => {\n                    const data = editor.getData()\n                    setLair(data)\n                  }}\n                ></CKEditor>\n              </div>\n            </Form.Group>\n\n            <Form.Group controlId='lairActions'>\n              <Form.Label>Действия логова</Form.Label>\n              <div className='editor'>\n                <CKEditor\n                  editor={ClassicEditor}\n                  data={lairActions}\n                  onChange={(event, editor) => {\n                    const data = editor.getData()\n                    setLairActions(data)\n                  }}\n                ></CKEditor>\n              </div>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Описание</Form.Label>\n              <div className='editor'>\n                <CKEditor\n                  editor={ClassicEditor}\n                  data={description}\n                  onChange={(event, editor) => {\n                    const data = editor.getData()\n                    setDescription(data)\n                  }}\n                ></CKEditor>\n              </div>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Отправить\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default CreatureEditScreen\n",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"139","replacedBy":"143"},{"ruleId":"141","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":15,"column":10,"nodeType":"147","messageId":"148","endLine":15,"endColumn":14},{"ruleId":"145","severity":1,"message":"149","line":15,"column":16,"nodeType":"147","messageId":"148","endLine":15,"endColumn":23},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],["150"],["151"],"no-unused-vars","'text' is assigned a value but never used.","Identifier","unusedVar","'setText' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]