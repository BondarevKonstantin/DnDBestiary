[{"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/index.js":"1","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/App.js":"2","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reportWebVitals.js":"3","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/Header.js":"4","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/BestiaryScreen.js":"5","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/CreatureScreen.js":"6","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/store.js":"7","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reducers/creatureReducers.js":"8","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/constants/creatureConstants.js":"9","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/actions/creatureActions.js":"10","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/Message.js":"11","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/Loader.js":"12"},{"size":587,"mtime":1608205003642,"results":"13","hashOfConfig":"14"},{"size":653,"mtime":1608018024122,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607682481802,"results":"16","hashOfConfig":"14"},{"size":1304,"mtime":1608017640033,"results":"17","hashOfConfig":"14"},{"size":1360,"mtime":1608207412787,"results":"18","hashOfConfig":"14"},{"size":4982,"mtime":1608205658609,"results":"19","hashOfConfig":"14"},{"size":564,"mtime":1608207905216,"results":"20","hashOfConfig":"14"},{"size":1122,"mtime":1608207797750,"results":"21","hashOfConfig":"14"},{"size":373,"mtime":1608207579742,"results":"22","hashOfConfig":"14"},{"size":1179,"mtime":1608207870015,"results":"23","hashOfConfig":"14"},{"size":238,"mtime":1608206809088,"results":"24","hashOfConfig":"14"},{"size":329,"mtime":1608207300424,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"uf0qi1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/index.js",[],["52","53"],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/App.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reportWebVitals.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/Header.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/BestiaryScreen.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/screens/CreatureScreen.js",["54"],"import React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Row, Col, ListGroup, Card, Button } from \"react-bootstrap\"\nimport axios from \"axios\"\n\nconst CreatureScreen = ({ match }) => {\n  const [creature, setCreature] = useState({\n    resistance: [],\n    immunityToDamage: [],\n    abilities: [],\n    skills: [],\n    sense: [],\n    languages: [],\n    actions: [],\n  })\n\n  useEffect(() => {\n    const fetchCreature = async () => {\n      const { data } = await axios.get(`/api/creatures/${match.params.id}`)\n\n      setCreature(data)\n    }\n\n    fetchCreature()\n  }, [match])\n\n  const addCreatureHandler = () => {\n    console.log(4)\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <div className='d-flex justify-content-between'>\n            <Card.Title>\n              <strong>{creature.name}</strong>\n            </Card.Title>\n            <Button\n              variant='outline-dark'\n              size='lg'\n              onClick={addCreatureHandler}\n            >\n              Добавить существо\n            </Button>\n          </div>\n\n          <Card.Subtitle className='mb-2 text-muted'>{`${creature.size}, ${creature.type}, ${creature.aligment}`}</Card.Subtitle>\n\n          <Card.Text>\n            <strong>Класс доспеха: </strong>\n            {creature.armorClass}\n          </Card.Text>\n\n          <Card.Text>\n            <strong>Хиты: </strong>\n            {creature.hits}\n          </Card.Text>\n\n          <Card.Text>\n            <strong>Скорость:</strong>\n            {creature.speed} фт\n            {creature.speedFlying !== 0\n              ? `, В полете ${creature.speedFlying} фт`\n              : \"\"}\n            {creature.speedSwim !== 0\n              ? `, Плавая ${creature.speedSwim} фт`\n              : \"\"}\n            {creature.speedClimb !== 0\n              ? `, Карабкаясь ${creature.speedClimb} фт`\n              : \"\"}\n          </Card.Text>\n          <Row>\n            <Col md={4}>\n              <ListGroup>\n                <ListGroup.Item>Сила: {creature.str} </ListGroup.Item>\n                <ListGroup.Item>Ловкость: {creature.dex} </ListGroup.Item>\n                <ListGroup.Item>Телосложение: {creature.con} </ListGroup.Item>\n                <ListGroup.Item>Интеллект: {creature.int} </ListGroup.Item>\n                <ListGroup.Item>Мудрость: {creature.wis} </ListGroup.Item>\n                <ListGroup.Item>Харизма: {creature.cha} </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col>\n              <Card.Text>\n                <strong>Сопротивление урону:</strong> {creature.resistance}\n              </Card.Text>\n\n              <Card.Text>\n                <strong>Иммунитет к урону:</strong> {creature.immunityToDamage}\n              </Card.Text>\n\n              {creature.abilities.length !== 0 ? (\n                <Card.Text>\n                  <strong>Навыки:</strong>{\" \"}\n                  {creature.abilities.map((ability) => {\n                    return (\n                      <span>\n                        {\" \"}\n                        {Object.keys(ability)} +{Object.values(ability)}{\" \"}\n                      </span>\n                    )\n                  })}\n                </Card.Text>\n              ) : null}\n\n              {creature.sense.length !== 0 ? (\n                <Card.Text>\n                  <strong>Чувства:</strong>{\" \"}\n                  {creature.sense.map((ability) => {\n                    return <span> {ability} </span>\n                  })}\n                </Card.Text>\n              ) : null}\n\n              {creature.languages.length !== 0 ? (\n                <Card.Text>\n                  <strong>Языки:</strong>{\" \"}\n                  {creature.languages.map((language) => {\n                    return <span> {language} </span>\n                  })}\n                </Card.Text>\n              ) : null}\n\n              <Card.Text>\n                <strong>Опасность:</strong> {creature.danger}\n              </Card.Text>\n            </Col>\n          </Row>\n\n          <h1 className='my-4 text-center'>---Способности---</h1>\n          {creature.skills.map((skill) => {\n            return (\n              <p>\n                <strong>{Object.keys(skill)}: </strong>\n                {Object.values(skill)}\n              </p>\n            )\n          })}\n\n          <h1 className='my-4 text-center'>---Действия---</h1>\n          {creature.actions.map((action) => {\n            return (\n              <p>\n                <strong>{Object.keys(action)}: </strong>\n                {Object.values(action)}\n              </p>\n            )\n          })}\n\n          <h1 className='my-4 text-center'>---Описание---</h1>\n          <p>{creature.description}</p>\n        </Card.Body>\n      </Card>\n    </>\n  )\n}\n\nexport default CreatureScreen\n","/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/store.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/reducers/creatureReducers.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/constants/creatureConstants.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/actions/creatureActions.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/Message.js",[],"/home/konstantin/Desktop/Projects/DnDBestiary/frontend/src/components/Loader.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":14},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]